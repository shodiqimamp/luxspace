{"ast":null,"code":"/* eslint no-extend-native: [\"error\", {\"exceptions\": [\"Number\"]}] */\nif (!Number.hasOwnProperty(\"thousand\")) Number.prototype.thousand = function () {\n  let decimals = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n  const thousand = new Intl.NumberFormat(navigator.language);\n  return thousand.format(this);\n};","map":{"version":3,"names":["Number","hasOwnProperty","prototype","thousand","decimals","Intl","NumberFormat","navigator","language","format"],"sources":["C:/Project/BWA/ReactNew/luxspace/src/helpers/format/thousand.js"],"sourcesContent":["/* eslint no-extend-native: [\"error\", {\"exceptions\": [\"Number\"]}] */\r\nif (!Number.hasOwnProperty(\"thousand\"))\r\n  Number.prototype.thousand = function (decimals = 0) {\r\n    const thousand = new Intl.NumberFormat(navigator.language);\r\n\r\n    return thousand.format(this);\r\n  };\r\n"],"mappings":"AAAA;AACA,IAAI,CAACA,MAAM,CAACC,cAAP,CAAsB,UAAtB,CAAL,EACED,MAAM,CAACE,SAAP,CAAiBC,QAAjB,GAA4B,YAAwB;EAAA,IAAdC,QAAc,uEAAH,CAAG;EAClD,MAAMD,QAAQ,GAAG,IAAIE,IAAI,CAACC,YAAT,CAAsBC,SAAS,CAACC,QAAhC,CAAjB;EAEA,OAAOL,QAAQ,CAACM,MAAT,CAAgB,IAAhB,CAAP;AACD,CAJD"},"metadata":{},"sourceType":"module"}